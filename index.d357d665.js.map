{"mappings":"AAKAA,eAAeC,GAAYC,YAAEA,EAAWC,KAAEA,IACtC,aAAaC,MAAMC,IAJX,2BAIoB,CACxBC,OAAQ,CACJC,IALI,qCAMJC,EAAG,GAAGN,IACNO,WAAY,QACZC,YAAa,aACbC,YAAY,EACZR,KAAM,GAAGA,IACTS,SAAU,K,CCdtB,SAASC,EAAaC,GAClB,OAAOA,EAASC,KAAKC,KAChBC,KACG,EAACC,aACGA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,KAEO,wCACVL,gBAA4BD,WAAsBE,gHAIrDC,6EAIAC,gFAIAC,iFAIAC,kCAMDC,KAAK,G,CC/Bd,IAAIC,EAAW,IAAIC,eAAe,aAAc,CAC5CC,aAAc,IACdC,UAAU,EACVC,aAAc,QAGlB,MAAMC,EAASC,SAASC,eAAe,eACjCC,EAAYF,SAASG,cAAc,YACnCC,EAAgBJ,SAASG,cAAc,cAK7C,IAAIE,EAHJN,EAAOO,iBAAiB,UASxB,SAAkBC,GACdA,EAAEC,iBAEFH,EAAcE,EAAEE,OAAOC,SAASxC,YAAYyC,MAAMC,OAClDC,EAAO,EAEFR,GAGDQ,EAAO,EACPX,EAAUY,UAAY,GAEtB7C,EAAY,C,YAAEoC,E,KAAaQ,IACtBE,MAAKjC,IACGA,EAASC,KAAKC,KAAKgC,OAKbH,GAAQI,KAAKC,KAAKpC,EAASC,KAAKoC,UAvB3C,KAwBIjB,EAAUY,UAAY,GACtBM,EAAatC,GACbuC,OAAOC,QACH,8DAEJlB,EAAcmB,UAAUC,IAAI,qBAE5BtB,EAAUY,UAAY,GACtBM,EAAatC,GACbuC,OAAOI,QAAQ,oBAAoB3C,EAASC,KAAKoC,qBACjDzB,EAASgC,UACTtB,EAAcmB,UAAUI,OAAO,mBAC/BC,QAAQC,IAAI/C,EAASC,QAjBrBmB,EAAUY,UAAY,GACtBO,OAAOS,QACH,4E,IAkBXC,OAAMC,IACHJ,QAAQI,MAAMA,EAAM,KA7B5BX,OAAOC,QAAQ,oB,IAfvBlB,EAAcE,iBAAiB,SAsD/B,WACIO,GAAQ,EAER5C,EAAY,C,YAAEoC,E,KAAaQ,IACtBE,MAAKjC,IACFsC,EAAatC,GACbY,EAASgC,UAoBrB,WACI,MAAQO,OAAQC,GACZhC,EAAUiC,kBAAkBC,wBAEhCC,OAAOC,SAAS,CACZC,IAAkB,EAAbL,EACLM,SAAU,U,CAzBNC,GACA,MAAMC,EAAazB,KAAKC,KAAKpC,EAASC,KAAKoC,UA1DvC,IA2DAN,GAAQ6B,GACRtC,EAAcmB,UAAUC,IAAI,mBAC5BH,OAAOC,QACH,+DAGJD,OAAOI,QACH,oBAAoB3C,EAASC,KAAKoC,UAlEtC,IAkE6DN,EAAO,aAEnE,IAGRkB,OAAMC,IACHJ,QAAQI,MAAMA,EAAM,G,IAzEhC,IAAInB,EAAO,EA8CX,SAASO,EAAatC,GAClB,MAAM6D,EAAc9D,EAAaC,GACjCoB,EAAU0C,mBAAmB,YAAaD,E,CA7C9CvC,EAAcmB,UAAUC,IAAI","sources":["src/partials/api.js","src/partials/card.js","src/index.js"],"sourcesContent":["\n\nconst URL = 'https://pixabay.com/api/';\nconst API_KEY = '40876649-e14b6ea7b41694cd36b83fc87';\n\nasync function fetchImages({ searchQuery, page }) {\n    return await axios.get(URL, {\n        params: {\n            key: API_KEY,\n            q: `${searchQuery}`,\n            image_type: 'photo',\n            orientation: 'horizontal',\n            safesearch: true,\n            page: `${page}`,\n            per_page: 40,\n        },\n    });\n\n}\n\nexport { fetchImages };","function createMarkup(response) {\n    return response.data.hits\n        .map(\n            ({\n                webformatURL,\n                largeImageURL,\n                tags,\n                likes,\n                views,\n                comments,\n                downloads,\n            }) => {\n                return `<div class=\"photo-card\">\n  <a href=\"${largeImageURL}\"><img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" /></a>\n  <div class=\"info\">\n    <p class=\"info-item\">\n        <b>Likes</b><br>\n        ${likes}\n    </p>\n    <p class=\"info-item\">\n        <b>Views</b><br>\n        ${views}\n    </p>\n    <p class=\"info-item\">\n        <b>Comments</b><br>\n        ${comments}\n    </p>\n    <p class=\"info-item\">\n        <b>Downloads</b><br>\n        ${downloads}\n    </p>\n  </div>\n</div>`;\n            }\n        )\n        .join('');\n}\n\nexport { createMarkup };","import { fetchImages } from './partials/api';\nimport { createMarkup } from './partials/card';\n\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n    captionDelay: 250,\n    captions: true,\n    captionsData: 'alt',\n});\n\nconst formEl = document.getElementById('search-form');\nconst galleryEl = document.querySelector('.gallery');\nconst loadMoreBtnEl = document.querySelector('.load-more');\n\nformEl.addEventListener('submit', onSearch);\nloadMoreBtnEl.addEventListener('click', onLoadMore);\n\nlet searchQuery;\nlet page = 0;\nconst perPage = 40;\n\nloadMoreBtnEl.classList.add('visually-hidden');\n\nfunction onSearch(e) {\n    e.preventDefault();\n    // console.log(e)\n    searchQuery = e.target.elements.searchQuery.value.trim();\n    page = 1;\n\n    if (!searchQuery) {\n        Notify.warning('Make your choice.');\n    } else {\n        page = 1;\n        galleryEl.innerHTML = '';\n\n        fetchImages({ searchQuery, page })\n            .then(response => {\n                if (!response.data.hits.length) {\n                    galleryEl.innerHTML = '';\n                    Notify.failure(\n                        'Sorry, there are no images matching your search query. Please try again.'\n                    );\n                } else if (page >= Math.ceil(response.data.totalHits / perPage)) {\n                    galleryEl.innerHTML = '';\n                    renderMarkup(response);\n                    Notify.warning(\n                        \"We're sorry, but you've reached the end of search results.\"\n                    );\n                    loadMoreBtnEl.classList.add('visually-hidden');\n                } else {\n                    galleryEl.innerHTML = '';\n                    renderMarkup(response);\n                    Notify.success(`Hooray! We found ${response.data.totalHits} images.`);\n                    lightbox.refresh();\n                    loadMoreBtnEl.classList.remove('visually-hidden');\n                    console.log(response.data);\n                }\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n}\n\nfunction renderMarkup(response) {\n    const markupCards = createMarkup(response);\n    galleryEl.insertAdjacentHTML('beforeend', markupCards);\n}\n\nfunction onLoadMore() {\n    page += 1;\n\n    fetchImages({ searchQuery, page })\n        .then(response => {\n            renderMarkup(response);\n            lightbox.refresh();\n            smoothScroll();\n            const totalPages = Math.ceil(response.data.totalHits / perPage);\n            if (page >= totalPages) {\n                loadMoreBtnEl.classList.add('visually-hidden');\n                Notify.warning(\n                    \"We're sorry, but you've reached the end of search results.\"\n                );\n            } else {\n                Notify.success(\n                    `Hooray! We found ${response.data.totalHits - perPage * (page - 1)\n                    } images.`\n                );\n            }\n        })\n        .catch(error => {\n            console.error(error);\n        });\n}\n\nfunction smoothScroll() {\n    const { height: cardHeight } =\n        galleryEl.firstElementChild.getBoundingClientRect();\n\n    window.scrollBy({\n        top: cardHeight * 2,\n        behavior: 'smooth',\n    });\n}\n"],"names":["async","$49762909569cdabc$export$be0d73ca56f1a1d","searchQuery","page","axios","get","params","key","q","image_type","orientation","safesearch","per_page","$b6cd9742421b206b$export$24783e9f3a24abe4","response","data","hits","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$1f0dc3b9307be026$var$lightbox","SimpleLightbox","captionDelay","captions","captionsData","$1f0dc3b9307be026$var$formEl","document","getElementById","$1f0dc3b9307be026$var$galleryEl","querySelector","$1f0dc3b9307be026$var$loadMoreBtnEl","$1f0dc3b9307be026$var$searchQuery","addEventListener","e","preventDefault","target","elements","value","trim","$1f0dc3b9307be026$var$page","innerHTML","then","length","Math","ceil","totalHits","$1f0dc3b9307be026$var$renderMarkup","Notify","warning","classList","add","success","refresh","remove","console","log","failure","catch","error","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$1f0dc3b9307be026$var$smoothScroll","totalPages","markupCards","insertAdjacentHTML"],"version":3,"file":"index.d357d665.js.map"}